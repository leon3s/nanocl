#!/bin/sh

### BEGIN INIT INFO
# Provides:       nanocl
# Required-Start:    $local_fs $remote_fs $network $syslog $named
# Required-Stop:     $local_fs $remote_fs $network $syslog $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the nanocl web server
# Description:       starts nanocl using start-stop-daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=/usr/local/bin/nanocld
NAME=nanocld
DESC="nanocl daemon"

test -x $DAEMON || exit 0

. /lib/init/vars.sh
. /lib/lsb/init-functions

# Try to extract nginx pidfile
# PID=$(cat /etc/nginx/nginx.conf | grep -Ev '^\s*#' | awk 'BEGIN { RS="[;{}]" } { if ($1 == "pid") print $2 }' | head -n1)
# if [ -z "$PID" ]; then
PID=/run/nanocl/nanocld.pid
# fi

start_nanocl() {
        # Start the daemon/service
        #
        # Returns:
        #   0 if daemon has been started
        #   1 if daemon was already running
        #   2 if daemon could not be started
        sh -i /var/lib/nanocl/prestart.sh 2> /dev/null &
        sleep 4
        start-stop-daemon --start --quiet --pidfile $PID --exec $DAEMON 2> /dev/null
        sleep 4
        chmod 770 -R /run/nanocl
        chown root:nanocl -R /run/nanocl
}

stop_nanocl() {
        # Stops the daemon/service
        #
        # Return
        #   0 if daemon has been stopped
        #   1 if daemon was already stopped
        #   2 if daemon could not be stopped
        #   other if a failure occurred
        killall containerd
        killall containerd-shim
        killall dockerd
        start-stop-daemon --stop --quiet --pidfile $PID --name $NAME
        RETVAL="$?"
        sleep 1
        return "$RETVAL"
}

case "$1" in
        start)
                start_nanocl &
                # case "$?" in
                #         0|1) log_end_msg 0 ;;
                #         2)   log_end_msg 1 ;;
                # esac
                ;;
        stop)
                stop_nanocl
                # case "$?" in
                #         0|1) log_end_msg 0 ;;
                #         2)   log_end_msg 1 ;;
                # esac
                ;;
        restart)
                # Check configuration before stopping nginx
                if ! test_config; then
                        exit $?
                fi

                stop_nanocl
                case "$?" in
                        0|1)
                                start_nanocl
                                case "$?" in
                                        0) log_end_msg 0 ;;
                                        1) log_end_msg 1 ;; # Old process is still running
                                        *) log_end_msg 1 ;; # Failed to start
                                esac
                                ;;
                        *)
                                # Failed to stop
                                log_end_msg 1
                                ;;
                esac
                ;;
        status)
                status_of_proc -p $PID "$DAEMON" "$NAME" && exit 0 || exit $?
                ;;
esac
